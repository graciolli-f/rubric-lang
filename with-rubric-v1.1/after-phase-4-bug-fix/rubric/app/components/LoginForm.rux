module LoginForm {
  @ "Pure presentation component for user login form"
  @ "Props-only, handles form inputs and validation display"

  type: "presentation"
  
  location: "src/components/LoginForm.tsx"
  
  interface {
    @ "Props interface"
    public LoginForm(props: {
      onSubmit: (data: LoginData) -> void,
      isLoading?: boolean,
      error?: string,
      className?: string
    }) -> JSX.Element
  }
  
  state {
    @ "Form state for controlled inputs"
    private email: string
    private password: string
    private showPassword: boolean
    private validationErrors: Record<string, string>
  }
  
  imports {
    @ "React only"
    allow "react" as external
    
    @ "UI libraries"
    allow "lucide-react" as external
    allow "clsx" as external
    
    @ "Type imports only"
    allow "../types/auth.types" as types
    
    @ "Form utilities"
    allow "../utils/validation" as {validateEmail}
    
    @ "No stores, services, or data access"
    deny imports ["../stores/*", "../services/*", "../data/*", "../hooks/*"]
  }
  
  constraints {
    @ "No side effects"
    deny io.*
    
    @ "No async operations"
    deny pattern.async_operations
    
    @ "Form validation"
    require pattern.input_validation
    require pattern.form_submission
    
    @ "Accessibility"
    require pattern.aria_labels
    require pattern.keyboard_navigation
    
    @ "Export restrictions"
    deny exports ["_*"]
    
    @ "Keep it simple"
    warn file.lines > 150
    deny file.lines > 200
    
    @ "Performance"
    require pattern.memo_if_expensive
  }
}