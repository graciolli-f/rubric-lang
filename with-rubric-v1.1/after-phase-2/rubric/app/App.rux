module App {
  @ "Root application component with navigation orchestration"
  @ "Special privileges as root component"

  type: "container"
  
  location: "src/App.tsx"
  
  interface {
    @ "Default export for the root App component"
    public default App() -> JSX.Element
  }
  
  state {
    @ "Global app state - navigation view mode"
    private currentView: ViewMode
  }
  
  imports {
    @ "React and UI libraries"
    allow "react" as external
    
    @ "Can import and compose main containers"
    allow "./components/ExpenseTrackerContainer" as {default as ExpenseTrackerContainer}
    allow "./components/AnalyticsContainer" as {default as AnalyticsContainer}
    allow "./components/Navigation" as {Navigation}
    
    @ "Type imports"
    allow "./types/expense.types" as types
    
    @ "Root components can orchestrate stores"
    allow "./stores/expense-store" as {useExpenseStore}
    
    @ "Cannot import services or data layers directly"
    deny imports ["./services/*", "./data/*"]
  }
  
  constraints {
    @ "No direct API calls"
    deny io.network.*
    
    @ "No direct storage access"
    deny io.localStorage.*
    
    @ "Limited console usage"
    warn io.console.*
    
    @ "Root components can handle top-level routing"
    allow pattern.routing_logic
    
    @ "Can set up global error boundaries"
    allow pattern.error_boundary
    
    @ "Size constraints"
    warn file.lines > 100
    deny file.lines > 200
  }
}