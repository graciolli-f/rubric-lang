module DateUtils {
  @ "Pure utility functions for date formatting and manipulation"
  @ "No side effects, deterministic outputs"

  type: "utility"
  
  location: "src/utils/date.ts"
  
  interface {
    @ "Formatting functions"
    public formatDate(date: string | Date) -> string
    public formatDateShort(date: string | Date) -> string
    public formatDateTime(date: string | Date) -> string
    
    @ "Parsing functions"
    public parseDate(text: string) -> Date
    public toISOString(date: Date) -> string
    
    @ "Validation functions"
    public isValidDate(value: unknown) -> boolean
    public validateDate(date: string) -> boolean
    
    @ "Comparison functions"
    public sortByDate(a: string, b: string) -> number
    public isToday(date: string) -> boolean
    
    @ "Helper constants"
    public readonly DATE_FORMAT: string
    public readonly DATETIME_FORMAT: string
  }
  
  state {
    @ "No mutable state allowed in utilities"
    @ "Use module-level constants instead"
    private readonly CONFIG = { format: "YYYY-MM-DD", timeFormat: "HH:mm" }
    private readonly REGEX_PATTERNS = { isoDate: /^\d{4}-\d{2}-\d{2}$/ }
  }
  
  imports {
    @ "Types only"
    allow "../types/expense.types" as types
    
    @ "No framework imports"
    deny imports ["react", "vue", "@angular/*"]
    
    @ "No side-effect imports"
    deny imports ["../stores/*", "../services/*", "../data/*"]
    
    @ "No component imports"
    deny imports ["../components/*"]
  }
  
  constraints {
    @ "Pure functions only"
    deny io.*  @ "No I/O operations"
    deny pattern.side_effects
    deny pattern.mutations
    
    @ "No async operations"
    deny pattern.async
    deny pattern.promises
    
    @ "Deterministic behavior"
    require pattern.deterministic
    deny pattern.random_without_seed
    deny pattern.date_now @ "Use passed timestamps"
    
    @ "Error handling"
    require pattern.defensive @ "Validate inputs"
    
    @ "Export all public functions"
    require exports ["[!_]*"]
    
    @ "Size constraints"
    warn file.lines > 100
    deny file.lines > 200
  }
}